# -*- coding: utf-8 -*-
"""metnum_pertemuan13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zBsFfh_MIx208LY-ptFhfwn9V0ZZ1yl8

Tangguh CHairunnisa 21120122140103
"""

import numpy as np
import time
import matplotlib.pyplot as plt

def f(x):
    return 4 / (1 + x**2)

def riemann_integral(N):
    dx = 1.0 / N
    total = 0.0
    for i in range(N):
        x = (i + 0.5) * dx
        total += f(x)
    return total * dx

def calculate_rms_error(estimated_pi, reference_pi):
    return np.sqrt((estimated_pi - reference_pi) ** 2)

# Nilai referensi pi
reference_pi = 3.14159265358979323846

# Variasi nilai N
N_values = [10, 100, 1000, 10000]
results = []

for N in N_values:
    start_time = time.time()
    estimated_pi = riemann_integral(N)
    end_time = time.time()

    rms_error = calculate_rms_error(estimated_pi, reference_pi)
    execution_time = end_time - start_time

    results.append((N, estimated_pi, rms_error, execution_time))

# Menampilkan hasil
for result in results:
    N, estimated_pi, rms_error, execution_time = result
    print(f"N = {N}: estimated_pi = {estimated_pi}, rms_error = {rms_error}, execution_time = {execution_time} seconds")

# Plotting hasil
Ns = [result[0] for result in results]
pis = [result[1] for result in results]
errors = [result[2] for result in results]
times = [result[3] for result in results]

plt.figure(figsize=(12, 6))

plt.subplot(1, 3, 1)
plt.plot(Ns, pis, marker='o')
plt.xscale('log')
plt.xlabel('N')
plt.ylabel('Estimated Pi')
plt.title('Estimated Pi vs N')

plt.subplot(1, 3, 2)
plt.plot(Ns, errors, marker='o')
plt.xscale('log')
plt.yscale('log')
plt.xlabel('N')
plt.ylabel('RMS Error')
plt.title('RMS Error vs N')

plt.subplot(1, 3, 3)
plt.plot(Ns, times, marker='o')
plt.xscale('log')
plt.xlabel('N')
plt.ylabel('Execution Time (s)')
plt.title('Execution Time vs N')

plt.tight_layout()
plt.show()